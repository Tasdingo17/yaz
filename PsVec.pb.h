// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PsVec.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_PsVec_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_PsVec_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_PsVec_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_PsVec_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_PsVec_2eproto;
namespace PsVec {
class SendProbeStamp;
class SendProbeStampDefaultTypeInternal;
extern SendProbeStampDefaultTypeInternal _SendProbeStamp_default_instance_;
class SendProbeStampVec;
class SendProbeStampVecDefaultTypeInternal;
extern SendProbeStampVecDefaultTypeInternal _SendProbeStampVec_default_instance_;
}  // namespace PsVec
PROTOBUF_NAMESPACE_OPEN
template<> ::PsVec::SendProbeStamp* Arena::CreateMaybeMessage<::PsVec::SendProbeStamp>(Arena*);
template<> ::PsVec::SendProbeStampVec* Arena::CreateMaybeMessage<::PsVec::SendProbeStampVec>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace PsVec {

// ===================================================================

class SendProbeStamp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PsVec.SendProbeStamp) */ {
 public:
  inline SendProbeStamp() : SendProbeStamp(nullptr) {};
  virtual ~SendProbeStamp();

  SendProbeStamp(const SendProbeStamp& from);
  SendProbeStamp(SendProbeStamp&& from) noexcept
    : SendProbeStamp() {
    *this = ::std::move(from);
  }

  inline SendProbeStamp& operator=(const SendProbeStamp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendProbeStamp& operator=(SendProbeStamp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SendProbeStamp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendProbeStamp* internal_default_instance() {
    return reinterpret_cast<const SendProbeStamp*>(
               &_SendProbeStamp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SendProbeStamp& a, SendProbeStamp& b) {
    a.Swap(&b);
  }
  inline void Swap(SendProbeStamp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendProbeStamp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SendProbeStamp* New() const final {
    return CreateMaybeMessage<SendProbeStamp>(nullptr);
  }

  SendProbeStamp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SendProbeStamp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SendProbeStamp& from);
  void MergeFrom(const SendProbeStamp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendProbeStamp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PsVec.SendProbeStamp";
  }
  protected:
  explicit SendProbeStamp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_PsVec_2eproto);
    return ::descriptor_table_PsVec_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMTvFieldNumber = 4,
    kMStreamFieldNumber = 1,
    kMSequenceFieldNumber = 2,
    kMTtlFieldNumber = 3,
  };
  // .google.protobuf.Timestamp m_tv = 4;
  bool has_m_tv() const;
  private:
  bool _internal_has_m_tv() const;
  public:
  void clear_m_tv();
  const PROTOBUF_NAMESPACE_ID::Timestamp& m_tv() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_m_tv();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_m_tv();
  void set_allocated_m_tv(PROTOBUF_NAMESPACE_ID::Timestamp* m_tv);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_m_tv() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_m_tv();
  public:
  void unsafe_arena_set_allocated_m_tv(
      PROTOBUF_NAMESPACE_ID::Timestamp* m_tv);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_m_tv();

  // uint32 m_stream = 1;
  void clear_m_stream();
  ::PROTOBUF_NAMESPACE_ID::uint32 m_stream() const;
  void set_m_stream(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_m_stream() const;
  void _internal_set_m_stream(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 m_sequence = 2;
  void clear_m_sequence();
  ::PROTOBUF_NAMESPACE_ID::uint32 m_sequence() const;
  void set_m_sequence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_m_sequence() const;
  void _internal_set_m_sequence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 m_ttl = 3;
  void clear_m_ttl();
  ::PROTOBUF_NAMESPACE_ID::uint32 m_ttl() const;
  void set_m_ttl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_m_ttl() const;
  void _internal_set_m_ttl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:PsVec.SendProbeStamp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Timestamp* m_tv_;
  ::PROTOBUF_NAMESPACE_ID::uint32 m_stream_;
  ::PROTOBUF_NAMESPACE_ID::uint32 m_sequence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 m_ttl_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_PsVec_2eproto;
};
// -------------------------------------------------------------------

class SendProbeStampVec PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PsVec.SendProbeStampVec) */ {
 public:
  inline SendProbeStampVec() : SendProbeStampVec(nullptr) {};
  virtual ~SendProbeStampVec();

  SendProbeStampVec(const SendProbeStampVec& from);
  SendProbeStampVec(SendProbeStampVec&& from) noexcept
    : SendProbeStampVec() {
    *this = ::std::move(from);
  }

  inline SendProbeStampVec& operator=(const SendProbeStampVec& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendProbeStampVec& operator=(SendProbeStampVec&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SendProbeStampVec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendProbeStampVec* internal_default_instance() {
    return reinterpret_cast<const SendProbeStampVec*>(
               &_SendProbeStampVec_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SendProbeStampVec& a, SendProbeStampVec& b) {
    a.Swap(&b);
  }
  inline void Swap(SendProbeStampVec* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendProbeStampVec* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SendProbeStampVec* New() const final {
    return CreateMaybeMessage<SendProbeStampVec>(nullptr);
  }

  SendProbeStampVec* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SendProbeStampVec>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SendProbeStampVec& from);
  void MergeFrom(const SendProbeStampVec& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendProbeStampVec* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PsVec.SendProbeStampVec";
  }
  protected:
  explicit SendProbeStampVec(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_PsVec_2eproto);
    return ::descriptor_table_PsVec_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMAppProbesPtrFieldNumber = 1,
  };
  // repeated .PsVec.SendProbeStamp m_app_probes_ptr = 1;
  int m_app_probes_ptr_size() const;
  private:
  int _internal_m_app_probes_ptr_size() const;
  public:
  void clear_m_app_probes_ptr();
  ::PsVec::SendProbeStamp* mutable_m_app_probes_ptr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PsVec::SendProbeStamp >*
      mutable_m_app_probes_ptr();
  private:
  const ::PsVec::SendProbeStamp& _internal_m_app_probes_ptr(int index) const;
  ::PsVec::SendProbeStamp* _internal_add_m_app_probes_ptr();
  public:
  const ::PsVec::SendProbeStamp& m_app_probes_ptr(int index) const;
  ::PsVec::SendProbeStamp* add_m_app_probes_ptr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PsVec::SendProbeStamp >&
      m_app_probes_ptr() const;

  // @@protoc_insertion_point(class_scope:PsVec.SendProbeStampVec)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PsVec::SendProbeStamp > m_app_probes_ptr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_PsVec_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SendProbeStamp

// uint32 m_stream = 1;
inline void SendProbeStamp::clear_m_stream() {
  m_stream_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SendProbeStamp::_internal_m_stream() const {
  return m_stream_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SendProbeStamp::m_stream() const {
  // @@protoc_insertion_point(field_get:PsVec.SendProbeStamp.m_stream)
  return _internal_m_stream();
}
inline void SendProbeStamp::_internal_set_m_stream(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  m_stream_ = value;
}
inline void SendProbeStamp::set_m_stream(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_m_stream(value);
  // @@protoc_insertion_point(field_set:PsVec.SendProbeStamp.m_stream)
}

// uint32 m_sequence = 2;
inline void SendProbeStamp::clear_m_sequence() {
  m_sequence_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SendProbeStamp::_internal_m_sequence() const {
  return m_sequence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SendProbeStamp::m_sequence() const {
  // @@protoc_insertion_point(field_get:PsVec.SendProbeStamp.m_sequence)
  return _internal_m_sequence();
}
inline void SendProbeStamp::_internal_set_m_sequence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  m_sequence_ = value;
}
inline void SendProbeStamp::set_m_sequence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_m_sequence(value);
  // @@protoc_insertion_point(field_set:PsVec.SendProbeStamp.m_sequence)
}

// uint32 m_ttl = 3;
inline void SendProbeStamp::clear_m_ttl() {
  m_ttl_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SendProbeStamp::_internal_m_ttl() const {
  return m_ttl_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SendProbeStamp::m_ttl() const {
  // @@protoc_insertion_point(field_get:PsVec.SendProbeStamp.m_ttl)
  return _internal_m_ttl();
}
inline void SendProbeStamp::_internal_set_m_ttl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  m_ttl_ = value;
}
inline void SendProbeStamp::set_m_ttl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_m_ttl(value);
  // @@protoc_insertion_point(field_set:PsVec.SendProbeStamp.m_ttl)
}

// .google.protobuf.Timestamp m_tv = 4;
inline bool SendProbeStamp::_internal_has_m_tv() const {
  return this != internal_default_instance() && m_tv_ != nullptr;
}
inline bool SendProbeStamp::has_m_tv() const {
  return _internal_has_m_tv();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SendProbeStamp::_internal_m_tv() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = m_tv_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SendProbeStamp::m_tv() const {
  // @@protoc_insertion_point(field_get:PsVec.SendProbeStamp.m_tv)
  return _internal_m_tv();
}
inline void SendProbeStamp::unsafe_arena_set_allocated_m_tv(
    PROTOBUF_NAMESPACE_ID::Timestamp* m_tv) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_tv_);
  }
  m_tv_ = m_tv;
  if (m_tv) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PsVec.SendProbeStamp.m_tv)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SendProbeStamp::release_m_tv() {
  auto temp = unsafe_arena_release_m_tv();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SendProbeStamp::unsafe_arena_release_m_tv() {
  // @@protoc_insertion_point(field_release:PsVec.SendProbeStamp.m_tv)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = m_tv_;
  m_tv_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SendProbeStamp::_internal_mutable_m_tv() {
  
  if (m_tv_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    m_tv_ = p;
  }
  return m_tv_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SendProbeStamp::mutable_m_tv() {
  // @@protoc_insertion_point(field_mutable:PsVec.SendProbeStamp.m_tv)
  return _internal_mutable_m_tv();
}
inline void SendProbeStamp::set_allocated_m_tv(PROTOBUF_NAMESPACE_ID::Timestamp* m_tv) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_tv_);
  }
  if (m_tv) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(m_tv)->GetArena();
    if (message_arena != submessage_arena) {
      m_tv = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, m_tv, submessage_arena);
    }
    
  } else {
    
  }
  m_tv_ = m_tv;
  // @@protoc_insertion_point(field_set_allocated:PsVec.SendProbeStamp.m_tv)
}

// -------------------------------------------------------------------

// SendProbeStampVec

// repeated .PsVec.SendProbeStamp m_app_probes_ptr = 1;
inline int SendProbeStampVec::_internal_m_app_probes_ptr_size() const {
  return m_app_probes_ptr_.size();
}
inline int SendProbeStampVec::m_app_probes_ptr_size() const {
  return _internal_m_app_probes_ptr_size();
}
inline void SendProbeStampVec::clear_m_app_probes_ptr() {
  m_app_probes_ptr_.Clear();
}
inline ::PsVec::SendProbeStamp* SendProbeStampVec::mutable_m_app_probes_ptr(int index) {
  // @@protoc_insertion_point(field_mutable:PsVec.SendProbeStampVec.m_app_probes_ptr)
  return m_app_probes_ptr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PsVec::SendProbeStamp >*
SendProbeStampVec::mutable_m_app_probes_ptr() {
  // @@protoc_insertion_point(field_mutable_list:PsVec.SendProbeStampVec.m_app_probes_ptr)
  return &m_app_probes_ptr_;
}
inline const ::PsVec::SendProbeStamp& SendProbeStampVec::_internal_m_app_probes_ptr(int index) const {
  return m_app_probes_ptr_.Get(index);
}
inline const ::PsVec::SendProbeStamp& SendProbeStampVec::m_app_probes_ptr(int index) const {
  // @@protoc_insertion_point(field_get:PsVec.SendProbeStampVec.m_app_probes_ptr)
  return _internal_m_app_probes_ptr(index);
}
inline ::PsVec::SendProbeStamp* SendProbeStampVec::_internal_add_m_app_probes_ptr() {
  return m_app_probes_ptr_.Add();
}
inline ::PsVec::SendProbeStamp* SendProbeStampVec::add_m_app_probes_ptr() {
  // @@protoc_insertion_point(field_add:PsVec.SendProbeStampVec.m_app_probes_ptr)
  return _internal_add_m_app_probes_ptr();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PsVec::SendProbeStamp >&
SendProbeStampVec::m_app_probes_ptr() const {
  // @@protoc_insertion_point(field_list:PsVec.SendProbeStampVec.m_app_probes_ptr)
  return m_app_probes_ptr_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PsVec

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_PsVec_2eproto
